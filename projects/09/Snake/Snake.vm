function Snake.new 0
push constant 17
call Memory.alloc 1
pop pointer 0
push constant 256
call Array.new 1
pop this 6
push constant 256
call Array.new 1
pop this 7
push constant 3
pop this 0
push constant 3
pop this 1
push constant 50
pop this 2
push constant 30
pop this 3
push constant 85
pop this 4
push constant 10
pop this 5
push constant 0
push this 6
add
push constant 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 7
add
push constant 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 6
add
push constant 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 7
add
push constant 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 6
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 7
add
push constant 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 6
add
pop pointer 1
push that 0
pop this 8
push constant 0
push this 7
add
pop pointer 1
push that 0
pop this 9
push this 0
push constant 1
sub
push this 6
add
pop pointer 1
push that 0
pop this 10
push this 0
push constant 1
sub
push this 7
add
pop pointer 1
push that 0
pop this 11
push constant 0
pop this 12
push constant 8
pop this 16
push this 16
call Array.new 1
pop this 13
push constant 0
pop this 14
push constant 0
pop this 15
push constant 0
pop static 0
push pointer 0
return
function Snake.orientate 0
push argument 0
pop pointer 0
push argument 1
pop this 4
push constant 0
return
function Snake.moveLeft 0
push argument 0
pop pointer 0
push pointer 0
push constant 3
push argument 1
call Snake.move 3
pop temp 0
push constant 0
return
function Snake.moveRight 0
push argument 0
pop pointer 0
push this 4
push constant 85
eq
push this 4
push constant 68
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 100
pop this 3
label IF_FALSE1
push this 3
push constant 1
sub
pop this 3
push pointer 0
call Snake.draw 1
pop temp 0
push pointer 0
push constant 82
call Snake.orientate 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Snake.moveUp 0
push argument 0
pop pointer 0
push constant 0
return
function Snake.moveDown 0
push argument 0
pop pointer 0
push static 0
push constant 1
add
pop static 0
push constant 0
return
function Snake.move 1
push argument 0
pop pointer 0
push this 0
push constant 1
sub
pop local 0
push constant 0
push this 6
add
pop pointer 1
push that 0
pop this 8
push constant 0
push this 7
add
pop pointer 1
push that 0
pop this 9
call Screen.clearScreen 0
pop temp 0
push argument 2
call Pellets.draw 1
pop temp 0
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 9
push constant 1
sub
pop this 9
label IF_FALSE0
push argument 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 8
push constant 1
add
pop this 8
label IF_FALSE1
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 9
push constant 1
add
pop this 9
label IF_FALSE2
push argument 1
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 8
push constant 1
sub
pop this 8
label IF_FALSE3
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push this 6
add
push local 0
push constant 1
sub
push this 6
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 7
add
push local 0
push constant 1
sub
push this 7
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
push this 6
add
push this 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 7
add
push this 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push constant 0
push this 6
add
pop pointer 1
push that 0
push constant 0
push this 7
add
pop pointer 1
push that 0
call Pellets.isEaten 3
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 12
push constant 1
add
pop this 12
label IF_FALSE4
push this 12
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 0
push this 6
add
push this 0
push constant 1
sub
push this 6
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 0
push this 7
add
push this 0
push constant 1
sub
push this 7
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 0
push constant 1
add
pop this 0
push this 12
push constant 1
sub
pop this 12
label IF_FALSE5
push pointer 0
call Snake.draw 1
pop temp 0
push constant 0
return
function Snake.eatPellets 0
push argument 0
pop pointer 0
push this 12
push constant 1
add
pop this 12
push constant 0
return
function Snake.shouldEatPellets 0
push argument 0
pop pointer 0
push argument 1
call Pellets.getXLocation 1
push constant 0
push this 6
add
pop pointer 1
push that 0
eq
push argument 1
call Pellets.getYLocation 1
push constant 0
push this 7
add
pop pointer 1
push that 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Snake.eatPellets 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Snake.getXLocation 0
push argument 0
pop pointer 0
push constant 0
push this 6
add
pop pointer 1
push that 0
return
function Snake.getYLocation 0
push argument 0
pop pointer 0
push constant 0
push this 7
add
pop pointer 1
push that 0
return
function Snake.getSpeed 0
push argument 0
pop pointer 0
push this 5
return
function Snake.setSpeed 0
push argument 0
pop pointer 0
push argument 1
pop this 5
push constant 0
return
function Snake.setOrientation 0
push argument 0
pop pointer 0
push argument 1
pop this 4
push constant 0
return
function Snake.draw 8
push argument 0
pop pointer 0
push constant 0
pop local 0
call Canvas.CELL 0
pop local 7
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 6
add
pop pointer 1
push that 0
push local 7
call Math.multiply 2
pop local 1
push local 0
push this 7
add
pop pointer 1
push that 0
push local 7
call Math.multiply 2
pop local 2
push local 1
pop local 3
push local 2
pop local 4
push local 1
push local 7
add
push constant 1
sub
pop local 5
push local 2
push local 7
add
push constant 1
sub
pop local 6
push local 3
push local 4
push local 5
push local 6
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
